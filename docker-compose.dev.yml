services:
  postgres:
    image: postgres
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      PGDATA: '/var/lib/postgresql/data/pgdata'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d mcserver" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - main

  backend:
    build: .
    environment:
      DJANGO_SECRET_KEY:
      DJANGO_DEBUG:
      POSTGRES_NAME:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_HOST:
      POSTGRES_PORT:
    command: >
      sh -c "
        python manage.py makemigrations scanlate &&
        python manage.py migrate &&
        python manage.py loaddata init_data.json &&     
        python manage.py runserver 0.0.0.0:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - 8000:8000
    networks:
      - main

volumes:
  pgdata:

networks:
  main:
    driver: bridge